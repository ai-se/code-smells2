@article{Mantyla2006,
year={2006},
issn={1382-3256},
journal={Empirical Software Engineering},
volume={11},
number={3},
doi={10.1007/s10664-006-9002-8},
title={Subjective evaluation of software evolvability using code smells: An empirical study},
url={http://dx.doi.org/10.1007/s10664-006-9002-8},
publisher={Springer US},
keywords={Code smells; Subjective evaluation; Perceived evaluation; Maintainability; Evolvability; Code metrics; Software metrics; Human factors},
author={Mäntylä, Mika V. and Lassenius, Casper},
pages={395-431},
language={English}
}

@book{Lanza2006,
author = {Lanza, Michele and Marinescu, Radu},
mendeley-groups = {References},
pages = {207},
publisher = {Springer Verlag},
title = {{Object-Oriented Metrics in Practice: Using Software Metrics to Characterize, Evaluate, and Improve the Design of Object-Oriented Systems}},
year = {2006}
}


@BOOK {Fowler99,
    author    = "Martin Fowler",
    title     = "Refactoring: Improving the Design of Existing Code",
    publisher = "Addison-Wesley",
    year      = "1999"
}

@INPROCEEDINGS{Marinescu2004, 
author={Marinescu, R.}, 
booktitle={Software Maintenance, 2004. Proceedings. 20th IEEE International Conference on}, 
title={Detection strategies: metrics-based rules for detecting design flaws}, 
year={2004}, 
month={Sept}, 
pages={350-359}, 
keywords={object-oriented programming;program debugging;software maintenance;software metrics;abnormal metric value;design flaw detection;design heuristics;detection strategy;isolation metrics;metrics-based rule;object-oriented design;object-oriented software system;quality assurance;software maintenance;Computer science;Design engineering;Diseases;Intelligent systems;Large-scale systems;Maintenance engineering;Object oriented modeling;Software design;Software maintenance;Software systems}, 
doi={10.1109/ICSM.2004.1357820}, 
ISSN={1063-6773},}

@online{Atwood06,
 author = {Jeff Atwood},
 title = {Code Smells},
 year = 2006,
 url = {http://blog.codinghorror.com/code-smells/},
 urldate={2015-07-06}
}

@Misc{sonarqube15,
author =   {SonarSource S.A},
title =    {SonarQube version 5.1.1},
howpublished = {\url{http://www.sonarqube.org/}},
year = {2008--2015},
note = {Accessed: 2015-07-15}
}

@inproceedings{Bieman1995,
 author = {Bieman, James M. and Kang, Byung-Kyoo},
 title = {Cohesion and Reuse in an Object-oriented System},
 booktitle = {Proceedings of the 1995 Symposium on Software Reusability},
 series = {SSR '95},
 year = {1995},
 isbn = {0-89791-739-1},
 location = {Seattle, Washington, USA},
 pages = {259--262},
 numpages = {4},
 url = {http://doi.acm.org/10.1145/211782.211856},
 doi = {10.1145/211782.211856},
 acmid = {211856},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@PhdThesis{Marinescu02,
           title = "{Measurement and Quality in Object-Oriented Design}",
          author = "Radu Marinescu",
          school = "Politechnica University of Timisoara",
            year = "2002",
}

@ARTICLE{McCabe76, 
author={McCabe, T.J.}, 
journal={Software Engineering, IEEE Transactions on}, 
title={A Complexity Measure}, 
year={1976}, 
month={Dec}, 
volume={SE-2}, 
number={4}, 
pages={308-320}, 
keywords={Basis;complexity measure;control flow;decomposition;graph theory;independence;linear;modularization;programming;reduction;software;testing;Fluid flow measurement;Graph theory;Linear programming;National security;Software engineering;Software maintenance;Software measurement;Software systems;Software testing;System testing;Basis;complexity measure;control flow;decomposition;graph theory;independence;linear;modularization;programming;reduction;software;testing}, 
doi={10.1109/TSE.1976.233837}, 
ISSN={0098-5589},}

@INPROCEEDINGS{Mantyla2004, 
author={Mäntylä, M.V. and Vanhanen, J. and Lassenius, C.}, 
booktitle={Software Maintenance, 2004. Proceedings. 20th IEEE International Conference on}, 
title={Bad smells - humans as code critics}, 
year={2004}, 
month={Sept}, 
pages={399-408}, 
keywords={program diagnostics;software houses;software metrics;software performance evaluation;Finnish software product company;bad code smell;code evaluation;code modules;poor software structures;source code metrics;subjective evaluation;Companies;Current measurement;Internet;Programming;Quality assessment;Software design;Software maintenance;Software measurement;Software quality;Software tools}, 
doi={10.1109/ICSM.2004.1357825}, 
ISSN={1063-6773},}

@ARTICLE{Sjoberg2013, 
author={Sjoberg, D.I.K. and Yamashita, A. and Anda, B.C.D. and Mockus, A. and Dyba, T.}, 
journal={Software Engineering, IEEE Transactions on}, 
title={Quantifying the Effect of Code Smells on Maintenance Effort}, 
year={2013}, 
month={Aug}, 
volume={39}, 
number={8}, 
pages={1144-1156}, 
keywords={Java;regression analysis;software maintenance;Eclipse IDE plug-in;Java files;Java systems;code size reduction;code smell effect quantification;code smell refactoring;file properties;file size;maintainable code;maintenance effort;maintenance tasks;refused bequest;regression analysis;Context;Electronic mail;Java;Maintenance engineering;Software;Surgery;Time measurement;Maintainability;code churn;object-oriented design;product metrics}, 
doi={10.1109/TSE.2012.89}, 
ISSN={0098-5589},}

@INPROCEEDINGS{Yamashita2013, 
author={Yamashita, A. and Moonen, L.}, 
booktitle={Reverse Engineering (WCRE), 2013 20th Working Conference on}, 
title={Do developers care about code smells? An exploratory survey}, 
year={2013}, 
month={Oct}, 
pages={242-251}, 
keywords={program diagnostics;software maintenance;software quality;code decay;code quality;code smell detection;code smell removal;software maintenance problems;Encoding;Feature extraction;Java;Maintenance engineering;Programming;Software;code analysis tools;code smell detection;code smells;maintainability;refactoring;survey;usability}, 
doi={10.1109/WCRE.2013.6671299},}

@INPROCEEDINGS{Mantyla2003, 
author={Mantyla, M. and Vanhanen, J. and Lassenius, C.}, 
booktitle={Software Maintenance, 2003. ICSM 2003. Proceedings. International Conference on}, 
title={A taxonomy and an initial empirical study of bad smells in code}, 
year={2003}, 
month={Sept}, 
pages={381-384}, 
keywords={object-oriented programming;program compilers;software maintenance;software performance evaluation;software quality;bad code smells;code quality;correlations;empirical study;object-oriented context;software quality;taxonomy;Cloning;Internet;Logic;Programming;Software maintenance;Software measurement;Software quality;Software systems;Taxonomy;Visualization}, 
doi={10.1109/ICSM.2003.1235447}, 
ISSN={1063-6773},}

@inproceedings{Olbrich2009,
 author = {Olbrich, Steffen and Cruzes, Daniela S. and Basili, Victor and Zazworka, Nico},
 title = {The Evolution and Impact of Code Smells: A Case Study of Two Open Source Systems},
 booktitle = {Proceedings of the 2009 3rd International Symposium on Empirical Software Engineering and Measurement},
 series = {ESEM '09},
 year = {2009},
 isbn = {978-1-4244-4842-5},
 pages = {390--400},
 numpages = {11},
 url = {http://dx.doi.org/10.1109/ESEM.2009.5314231},
 doi = {10.1109/ESEM.2009.5314231},
 acmid = {1671285},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
} 

@INPROCEEDINGS{Olbrich2010, 
author={Olbrich, S.M. and Cruzes, D.S. and Sjoberg, Dag I.K.}, 
booktitle={Software Maintenance (ICSM), 2010 IEEE International Conference on}, 
title={Are all code smells harmful? A study of God Classes and Brain Classes in the evolution of three open source systems}, 
year={2010}, 
month={Sept}, 
pages={1-10}, 
keywords={object-oriented programming;public domain software;software maintenance;brain classes;code smells;god classes;maintainability;object-oriented systems;open source systems;Data analysis;FAA;Instruments;Software;Code smells;change frequency;defects;detection strategies;open source;software evolution}, 
doi={10.1109/ICSM.2010.5609564}, 
ISSN={1063-6773},}

@BOOK {Kerievsky2004,
    author    = "Joshua Kerievsky",
    title     = "Refactoring to Patterns",
    publisher = "Addison-Wesly Professional",
    year      = "2004"
}
